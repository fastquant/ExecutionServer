// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: protos/BE.TradeList.proto

package BE;

public final class BETradeList {
  private BETradeList() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  public interface DataTradeOrBuilder
      extends com.google.protobuf.MessageOrBuilder {
    
    // required string orderId = 1;
    boolean hasOrderId();
    String getOrderId();
    
    // required string tradeId = 2;
    boolean hasTradeId();
    String getTradeId();
    
    // required int64 entrytime = 3;
    boolean hasEntrytime();
    long getEntrytime();
    
    // required string exchange = 4;
    boolean hasExchange();
    String getExchange();
    
    // required string symbol = 5;
    boolean hasSymbol();
    String getSymbol();
    
    // required int32 side = 6;
    boolean hasSide();
    int getSide();
    
    // required double price = 7;
    boolean hasPrice();
    double getPrice();
    
    // required int64 quantity = 8;
    boolean hasQuantity();
    long getQuantity();
  }
  public static final class DataTrade extends
      com.google.protobuf.GeneratedMessage
      implements DataTradeOrBuilder {
    // Use DataTrade.newBuilder() to construct.
    private DataTrade(Builder builder) {
      super(builder);
    }
    private DataTrade(boolean noInit) {}
    
    private static final DataTrade defaultInstance;
    public static DataTrade getDefaultInstance() {
      return defaultInstance;
    }
    
    public DataTrade getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return BE.BETradeList.internal_static_BE_DataTrade_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return BE.BETradeList.internal_static_BE_DataTrade_fieldAccessorTable;
    }
    
    private int bitField0_;
    // required string orderId = 1;
    public static final int ORDERID_FIELD_NUMBER = 1;
    private java.lang.Object orderId_;
    public boolean hasOrderId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    public String getOrderId() {
      java.lang.Object ref = orderId_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (com.google.protobuf.Internal.isValidUtf8(bs)) {
          orderId_ = s;
        }
        return s;
      }
    }
    private com.google.protobuf.ByteString getOrderIdBytes() {
      java.lang.Object ref = orderId_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8((String) ref);
        orderId_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    
    // required string tradeId = 2;
    public static final int TRADEID_FIELD_NUMBER = 2;
    private java.lang.Object tradeId_;
    public boolean hasTradeId() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    public String getTradeId() {
      java.lang.Object ref = tradeId_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (com.google.protobuf.Internal.isValidUtf8(bs)) {
          tradeId_ = s;
        }
        return s;
      }
    }
    private com.google.protobuf.ByteString getTradeIdBytes() {
      java.lang.Object ref = tradeId_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8((String) ref);
        tradeId_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    
    // required int64 entrytime = 3;
    public static final int ENTRYTIME_FIELD_NUMBER = 3;
    private long entrytime_;
    public boolean hasEntrytime() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    public long getEntrytime() {
      return entrytime_;
    }
    
    // required string exchange = 4;
    public static final int EXCHANGE_FIELD_NUMBER = 4;
    private java.lang.Object exchange_;
    public boolean hasExchange() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    public String getExchange() {
      java.lang.Object ref = exchange_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (com.google.protobuf.Internal.isValidUtf8(bs)) {
          exchange_ = s;
        }
        return s;
      }
    }
    private com.google.protobuf.ByteString getExchangeBytes() {
      java.lang.Object ref = exchange_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8((String) ref);
        exchange_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    
    // required string symbol = 5;
    public static final int SYMBOL_FIELD_NUMBER = 5;
    private java.lang.Object symbol_;
    public boolean hasSymbol() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    public String getSymbol() {
      java.lang.Object ref = symbol_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (com.google.protobuf.Internal.isValidUtf8(bs)) {
          symbol_ = s;
        }
        return s;
      }
    }
    private com.google.protobuf.ByteString getSymbolBytes() {
      java.lang.Object ref = symbol_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8((String) ref);
        symbol_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    
    // required int32 side = 6;
    public static final int SIDE_FIELD_NUMBER = 6;
    private int side_;
    public boolean hasSide() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    public int getSide() {
      return side_;
    }
    
    // required double price = 7;
    public static final int PRICE_FIELD_NUMBER = 7;
    private double price_;
    public boolean hasPrice() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    public double getPrice() {
      return price_;
    }
    
    // required int64 quantity = 8;
    public static final int QUANTITY_FIELD_NUMBER = 8;
    private long quantity_;
    public boolean hasQuantity() {
      return ((bitField0_ & 0x00000080) == 0x00000080);
    }
    public long getQuantity() {
      return quantity_;
    }
    
    private void initFields() {
      orderId_ = "";
      tradeId_ = "";
      entrytime_ = 0L;
      exchange_ = "";
      symbol_ = "";
      side_ = 0;
      price_ = 0D;
      quantity_ = 0L;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;
      
      if (!hasOrderId()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasTradeId()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasEntrytime()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasExchange()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasSymbol()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasSide()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasPrice()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasQuantity()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, getOrderIdBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBytes(2, getTradeIdBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt64(3, entrytime_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeBytes(4, getExchangeBytes());
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeBytes(5, getSymbolBytes());
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeInt32(6, side_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeDouble(7, price_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        output.writeInt64(8, quantity_);
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, getOrderIdBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, getTradeIdBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(3, entrytime_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(4, getExchangeBytes());
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(5, getSymbolBytes());
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(6, side_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(7, price_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(8, quantity_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }
    
    public static BE.BETradeList.DataTrade parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static BE.BETradeList.DataTrade parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static BE.BETradeList.DataTrade parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static BE.BETradeList.DataTrade parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static BE.BETradeList.DataTrade parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static BE.BETradeList.DataTrade parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static BE.BETradeList.DataTrade parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static BE.BETradeList.DataTrade parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static BE.BETradeList.DataTrade parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static BE.BETradeList.DataTrade parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(BE.BETradeList.DataTrade prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements BE.BETradeList.DataTradeOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return BE.BETradeList.internal_static_BE_DataTrade_descriptor;
      }
      
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return BE.BETradeList.internal_static_BE_DataTrade_fieldAccessorTable;
      }
      
      // Construct using BE.BETradeList.DataTrade.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      
      private Builder(BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }
      
      public Builder clear() {
        super.clear();
        orderId_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        tradeId_ = "";
        bitField0_ = (bitField0_ & ~0x00000002);
        entrytime_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000004);
        exchange_ = "";
        bitField0_ = (bitField0_ & ~0x00000008);
        symbol_ = "";
        bitField0_ = (bitField0_ & ~0x00000010);
        side_ = 0;
        bitField0_ = (bitField0_ & ~0x00000020);
        price_ = 0D;
        bitField0_ = (bitField0_ & ~0x00000040);
        quantity_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000080);
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return BE.BETradeList.DataTrade.getDescriptor();
      }
      
      public BE.BETradeList.DataTrade getDefaultInstanceForType() {
        return BE.BETradeList.DataTrade.getDefaultInstance();
      }
      
      public BE.BETradeList.DataTrade build() {
        BE.BETradeList.DataTrade result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }
      
      private BE.BETradeList.DataTrade buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        BE.BETradeList.DataTrade result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }
      
      public BE.BETradeList.DataTrade buildPartial() {
        BE.BETradeList.DataTrade result = new BE.BETradeList.DataTrade(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.orderId_ = orderId_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.tradeId_ = tradeId_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.entrytime_ = entrytime_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.exchange_ = exchange_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.symbol_ = symbol_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.side_ = side_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000040;
        }
        result.price_ = price_;
        if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
          to_bitField0_ |= 0x00000080;
        }
        result.quantity_ = quantity_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof BE.BETradeList.DataTrade) {
          return mergeFrom((BE.BETradeList.DataTrade)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(BE.BETradeList.DataTrade other) {
        if (other == BE.BETradeList.DataTrade.getDefaultInstance()) return this;
        if (other.hasOrderId()) {
          setOrderId(other.getOrderId());
        }
        if (other.hasTradeId()) {
          setTradeId(other.getTradeId());
        }
        if (other.hasEntrytime()) {
          setEntrytime(other.getEntrytime());
        }
        if (other.hasExchange()) {
          setExchange(other.getExchange());
        }
        if (other.hasSymbol()) {
          setSymbol(other.getSymbol());
        }
        if (other.hasSide()) {
          setSide(other.getSide());
        }
        if (other.hasPrice()) {
          setPrice(other.getPrice());
        }
        if (other.hasQuantity()) {
          setQuantity(other.getQuantity());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public final boolean isInitialized() {
        if (!hasOrderId()) {
          
          return false;
        }
        if (!hasTradeId()) {
          
          return false;
        }
        if (!hasEntrytime()) {
          
          return false;
        }
        if (!hasExchange()) {
          
          return false;
        }
        if (!hasSymbol()) {
          
          return false;
        }
        if (!hasSide()) {
          
          return false;
        }
        if (!hasPrice()) {
          
          return false;
        }
        if (!hasQuantity()) {
          
          return false;
        }
        return true;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              onChanged();
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                onChanged();
                return this;
              }
              break;
            }
            case 10: {
              bitField0_ |= 0x00000001;
              orderId_ = input.readBytes();
              break;
            }
            case 18: {
              bitField0_ |= 0x00000002;
              tradeId_ = input.readBytes();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              entrytime_ = input.readInt64();
              break;
            }
            case 34: {
              bitField0_ |= 0x00000008;
              exchange_ = input.readBytes();
              break;
            }
            case 42: {
              bitField0_ |= 0x00000010;
              symbol_ = input.readBytes();
              break;
            }
            case 48: {
              bitField0_ |= 0x00000020;
              side_ = input.readInt32();
              break;
            }
            case 57: {
              bitField0_ |= 0x00000040;
              price_ = input.readDouble();
              break;
            }
            case 64: {
              bitField0_ |= 0x00000080;
              quantity_ = input.readInt64();
              break;
            }
          }
        }
      }
      
      private int bitField0_;
      
      // required string orderId = 1;
      private java.lang.Object orderId_ = "";
      public boolean hasOrderId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      public String getOrderId() {
        java.lang.Object ref = orderId_;
        if (!(ref instanceof String)) {
          String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
          orderId_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      public Builder setOrderId(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        orderId_ = value;
        onChanged();
        return this;
      }
      public Builder clearOrderId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        orderId_ = getDefaultInstance().getOrderId();
        onChanged();
        return this;
      }
      void setOrderId(com.google.protobuf.ByteString value) {
        bitField0_ |= 0x00000001;
        orderId_ = value;
        onChanged();
      }
      
      // required string tradeId = 2;
      private java.lang.Object tradeId_ = "";
      public boolean hasTradeId() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      public String getTradeId() {
        java.lang.Object ref = tradeId_;
        if (!(ref instanceof String)) {
          String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
          tradeId_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      public Builder setTradeId(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        tradeId_ = value;
        onChanged();
        return this;
      }
      public Builder clearTradeId() {
        bitField0_ = (bitField0_ & ~0x00000002);
        tradeId_ = getDefaultInstance().getTradeId();
        onChanged();
        return this;
      }
      void setTradeId(com.google.protobuf.ByteString value) {
        bitField0_ |= 0x00000002;
        tradeId_ = value;
        onChanged();
      }
      
      // required int64 entrytime = 3;
      private long entrytime_ ;
      public boolean hasEntrytime() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      public long getEntrytime() {
        return entrytime_;
      }
      public Builder setEntrytime(long value) {
        bitField0_ |= 0x00000004;
        entrytime_ = value;
        onChanged();
        return this;
      }
      public Builder clearEntrytime() {
        bitField0_ = (bitField0_ & ~0x00000004);
        entrytime_ = 0L;
        onChanged();
        return this;
      }
      
      // required string exchange = 4;
      private java.lang.Object exchange_ = "";
      public boolean hasExchange() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      public String getExchange() {
        java.lang.Object ref = exchange_;
        if (!(ref instanceof String)) {
          String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
          exchange_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      public Builder setExchange(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000008;
        exchange_ = value;
        onChanged();
        return this;
      }
      public Builder clearExchange() {
        bitField0_ = (bitField0_ & ~0x00000008);
        exchange_ = getDefaultInstance().getExchange();
        onChanged();
        return this;
      }
      void setExchange(com.google.protobuf.ByteString value) {
        bitField0_ |= 0x00000008;
        exchange_ = value;
        onChanged();
      }
      
      // required string symbol = 5;
      private java.lang.Object symbol_ = "";
      public boolean hasSymbol() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      public String getSymbol() {
        java.lang.Object ref = symbol_;
        if (!(ref instanceof String)) {
          String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
          symbol_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      public Builder setSymbol(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000010;
        symbol_ = value;
        onChanged();
        return this;
      }
      public Builder clearSymbol() {
        bitField0_ = (bitField0_ & ~0x00000010);
        symbol_ = getDefaultInstance().getSymbol();
        onChanged();
        return this;
      }
      void setSymbol(com.google.protobuf.ByteString value) {
        bitField0_ |= 0x00000010;
        symbol_ = value;
        onChanged();
      }
      
      // required int32 side = 6;
      private int side_ ;
      public boolean hasSide() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      public int getSide() {
        return side_;
      }
      public Builder setSide(int value) {
        bitField0_ |= 0x00000020;
        side_ = value;
        onChanged();
        return this;
      }
      public Builder clearSide() {
        bitField0_ = (bitField0_ & ~0x00000020);
        side_ = 0;
        onChanged();
        return this;
      }
      
      // required double price = 7;
      private double price_ ;
      public boolean hasPrice() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      public double getPrice() {
        return price_;
      }
      public Builder setPrice(double value) {
        bitField0_ |= 0x00000040;
        price_ = value;
        onChanged();
        return this;
      }
      public Builder clearPrice() {
        bitField0_ = (bitField0_ & ~0x00000040);
        price_ = 0D;
        onChanged();
        return this;
      }
      
      // required int64 quantity = 8;
      private long quantity_ ;
      public boolean hasQuantity() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      public long getQuantity() {
        return quantity_;
      }
      public Builder setQuantity(long value) {
        bitField0_ |= 0x00000080;
        quantity_ = value;
        onChanged();
        return this;
      }
      public Builder clearQuantity() {
        bitField0_ = (bitField0_ & ~0x00000080);
        quantity_ = 0L;
        onChanged();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:BE.DataTrade)
    }
    
    static {
      defaultInstance = new DataTrade(true);
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:BE.DataTrade)
  }
  
  public interface DataTradeListOrBuilder
      extends com.google.protobuf.MessageOrBuilder {
    
    // repeated .BE.DataTrade trade = 1;
    java.util.List<BE.BETradeList.DataTrade> 
        getTradeList();
    BE.BETradeList.DataTrade getTrade(int index);
    int getTradeCount();
    java.util.List<? extends BE.BETradeList.DataTradeOrBuilder> 
        getTradeOrBuilderList();
    BE.BETradeList.DataTradeOrBuilder getTradeOrBuilder(
        int index);
  }
  public static final class DataTradeList extends
      com.google.protobuf.GeneratedMessage
      implements DataTradeListOrBuilder {
    // Use DataTradeList.newBuilder() to construct.
    private DataTradeList(Builder builder) {
      super(builder);
    }
    private DataTradeList(boolean noInit) {}
    
    private static final DataTradeList defaultInstance;
    public static DataTradeList getDefaultInstance() {
      return defaultInstance;
    }
    
    public DataTradeList getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return BE.BETradeList.internal_static_BE_DataTradeList_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return BE.BETradeList.internal_static_BE_DataTradeList_fieldAccessorTable;
    }
    
    // repeated .BE.DataTrade trade = 1;
    public static final int TRADE_FIELD_NUMBER = 1;
    private java.util.List<BE.BETradeList.DataTrade> trade_;
    public java.util.List<BE.BETradeList.DataTrade> getTradeList() {
      return trade_;
    }
    public java.util.List<? extends BE.BETradeList.DataTradeOrBuilder> 
        getTradeOrBuilderList() {
      return trade_;
    }
    public int getTradeCount() {
      return trade_.size();
    }
    public BE.BETradeList.DataTrade getTrade(int index) {
      return trade_.get(index);
    }
    public BE.BETradeList.DataTradeOrBuilder getTradeOrBuilder(
        int index) {
      return trade_.get(index);
    }
    
    private void initFields() {
      trade_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;
      
      for (int i = 0; i < getTradeCount(); i++) {
        if (!getTrade(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      for (int i = 0; i < trade_.size(); i++) {
        output.writeMessage(1, trade_.get(i));
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      for (int i = 0; i < trade_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, trade_.get(i));
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }
    
    public static BE.BETradeList.DataTradeList parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static BE.BETradeList.DataTradeList parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static BE.BETradeList.DataTradeList parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static BE.BETradeList.DataTradeList parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static BE.BETradeList.DataTradeList parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static BE.BETradeList.DataTradeList parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static BE.BETradeList.DataTradeList parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static BE.BETradeList.DataTradeList parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static BE.BETradeList.DataTradeList parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static BE.BETradeList.DataTradeList parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(BE.BETradeList.DataTradeList prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements BE.BETradeList.DataTradeListOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return BE.BETradeList.internal_static_BE_DataTradeList_descriptor;
      }
      
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return BE.BETradeList.internal_static_BE_DataTradeList_fieldAccessorTable;
      }
      
      // Construct using BE.BETradeList.DataTradeList.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      
      private Builder(BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getTradeFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }
      
      public Builder clear() {
        super.clear();
        if (tradeBuilder_ == null) {
          trade_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          tradeBuilder_.clear();
        }
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return BE.BETradeList.DataTradeList.getDescriptor();
      }
      
      public BE.BETradeList.DataTradeList getDefaultInstanceForType() {
        return BE.BETradeList.DataTradeList.getDefaultInstance();
      }
      
      public BE.BETradeList.DataTradeList build() {
        BE.BETradeList.DataTradeList result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }
      
      private BE.BETradeList.DataTradeList buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        BE.BETradeList.DataTradeList result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }
      
      public BE.BETradeList.DataTradeList buildPartial() {
        BE.BETradeList.DataTradeList result = new BE.BETradeList.DataTradeList(this);
        int from_bitField0_ = bitField0_;
        if (tradeBuilder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001)) {
            trade_ = java.util.Collections.unmodifiableList(trade_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.trade_ = trade_;
        } else {
          result.trade_ = tradeBuilder_.build();
        }
        onBuilt();
        return result;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof BE.BETradeList.DataTradeList) {
          return mergeFrom((BE.BETradeList.DataTradeList)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(BE.BETradeList.DataTradeList other) {
        if (other == BE.BETradeList.DataTradeList.getDefaultInstance()) return this;
        if (tradeBuilder_ == null) {
          if (!other.trade_.isEmpty()) {
            if (trade_.isEmpty()) {
              trade_ = other.trade_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureTradeIsMutable();
              trade_.addAll(other.trade_);
            }
            onChanged();
          }
        } else {
          if (!other.trade_.isEmpty()) {
            if (tradeBuilder_.isEmpty()) {
              tradeBuilder_.dispose();
              tradeBuilder_ = null;
              trade_ = other.trade_;
              bitField0_ = (bitField0_ & ~0x00000001);
              tradeBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getTradeFieldBuilder() : null;
            } else {
              tradeBuilder_.addAllMessages(other.trade_);
            }
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public final boolean isInitialized() {
        for (int i = 0; i < getTradeCount(); i++) {
          if (!getTrade(i).isInitialized()) {
            
            return false;
          }
        }
        return true;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              onChanged();
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                onChanged();
                return this;
              }
              break;
            }
            case 10: {
              BE.BETradeList.DataTrade.Builder subBuilder = BE.BETradeList.DataTrade.newBuilder();
              input.readMessage(subBuilder, extensionRegistry);
              addTrade(subBuilder.buildPartial());
              break;
            }
          }
        }
      }
      
      private int bitField0_;
      
      // repeated .BE.DataTrade trade = 1;
      private java.util.List<BE.BETradeList.DataTrade> trade_ =
        java.util.Collections.emptyList();
      private void ensureTradeIsMutable() {
        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
          trade_ = new java.util.ArrayList<BE.BETradeList.DataTrade>(trade_);
          bitField0_ |= 0x00000001;
         }
      }
      
      private com.google.protobuf.RepeatedFieldBuilder<
          BE.BETradeList.DataTrade, BE.BETradeList.DataTrade.Builder, BE.BETradeList.DataTradeOrBuilder> tradeBuilder_;
      
      public java.util.List<BE.BETradeList.DataTrade> getTradeList() {
        if (tradeBuilder_ == null) {
          return java.util.Collections.unmodifiableList(trade_);
        } else {
          return tradeBuilder_.getMessageList();
        }
      }
      public int getTradeCount() {
        if (tradeBuilder_ == null) {
          return trade_.size();
        } else {
          return tradeBuilder_.getCount();
        }
      }
      public BE.BETradeList.DataTrade getTrade(int index) {
        if (tradeBuilder_ == null) {
          return trade_.get(index);
        } else {
          return tradeBuilder_.getMessage(index);
        }
      }
      public Builder setTrade(
          int index, BE.BETradeList.DataTrade value) {
        if (tradeBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureTradeIsMutable();
          trade_.set(index, value);
          onChanged();
        } else {
          tradeBuilder_.setMessage(index, value);
        }
        return this;
      }
      public Builder setTrade(
          int index, BE.BETradeList.DataTrade.Builder builderForValue) {
        if (tradeBuilder_ == null) {
          ensureTradeIsMutable();
          trade_.set(index, builderForValue.build());
          onChanged();
        } else {
          tradeBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      public Builder addTrade(BE.BETradeList.DataTrade value) {
        if (tradeBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureTradeIsMutable();
          trade_.add(value);
          onChanged();
        } else {
          tradeBuilder_.addMessage(value);
        }
        return this;
      }
      public Builder addTrade(
          int index, BE.BETradeList.DataTrade value) {
        if (tradeBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureTradeIsMutable();
          trade_.add(index, value);
          onChanged();
        } else {
          tradeBuilder_.addMessage(index, value);
        }
        return this;
      }
      public Builder addTrade(
          BE.BETradeList.DataTrade.Builder builderForValue) {
        if (tradeBuilder_ == null) {
          ensureTradeIsMutable();
          trade_.add(builderForValue.build());
          onChanged();
        } else {
          tradeBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      public Builder addTrade(
          int index, BE.BETradeList.DataTrade.Builder builderForValue) {
        if (tradeBuilder_ == null) {
          ensureTradeIsMutable();
          trade_.add(index, builderForValue.build());
          onChanged();
        } else {
          tradeBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      public Builder addAllTrade(
          java.lang.Iterable<? extends BE.BETradeList.DataTrade> values) {
        if (tradeBuilder_ == null) {
          ensureTradeIsMutable();
          super.addAll(values, trade_);
          onChanged();
        } else {
          tradeBuilder_.addAllMessages(values);
        }
        return this;
      }
      public Builder clearTrade() {
        if (tradeBuilder_ == null) {
          trade_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          tradeBuilder_.clear();
        }
        return this;
      }
      public Builder removeTrade(int index) {
        if (tradeBuilder_ == null) {
          ensureTradeIsMutable();
          trade_.remove(index);
          onChanged();
        } else {
          tradeBuilder_.remove(index);
        }
        return this;
      }
      public BE.BETradeList.DataTrade.Builder getTradeBuilder(
          int index) {
        return getTradeFieldBuilder().getBuilder(index);
      }
      public BE.BETradeList.DataTradeOrBuilder getTradeOrBuilder(
          int index) {
        if (tradeBuilder_ == null) {
          return trade_.get(index);  } else {
          return tradeBuilder_.getMessageOrBuilder(index);
        }
      }
      public java.util.List<? extends BE.BETradeList.DataTradeOrBuilder> 
           getTradeOrBuilderList() {
        if (tradeBuilder_ != null) {
          return tradeBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(trade_);
        }
      }
      public BE.BETradeList.DataTrade.Builder addTradeBuilder() {
        return getTradeFieldBuilder().addBuilder(
            BE.BETradeList.DataTrade.getDefaultInstance());
      }
      public BE.BETradeList.DataTrade.Builder addTradeBuilder(
          int index) {
        return getTradeFieldBuilder().addBuilder(
            index, BE.BETradeList.DataTrade.getDefaultInstance());
      }
      public java.util.List<BE.BETradeList.DataTrade.Builder> 
           getTradeBuilderList() {
        return getTradeFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          BE.BETradeList.DataTrade, BE.BETradeList.DataTrade.Builder, BE.BETradeList.DataTradeOrBuilder> 
          getTradeFieldBuilder() {
        if (tradeBuilder_ == null) {
          tradeBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              BE.BETradeList.DataTrade, BE.BETradeList.DataTrade.Builder, BE.BETradeList.DataTradeOrBuilder>(
                  trade_,
                  ((bitField0_ & 0x00000001) == 0x00000001),
                  getParentForChildren(),
                  isClean());
          trade_ = null;
        }
        return tradeBuilder_;
      }
      
      // @@protoc_insertion_point(builder_scope:BE.DataTradeList)
    }
    
    static {
      defaultInstance = new DataTradeList(true);
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:BE.DataTradeList)
  }
  
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_BE_DataTrade_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_BE_DataTrade_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_BE_DataTradeList_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_BE_DataTradeList_fieldAccessorTable;
  
  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\031protos/BE.TradeList.proto\022\002BE\"\221\001\n\tData" +
      "Trade\022\017\n\007orderId\030\001 \002(\t\022\017\n\007tradeId\030\002 \002(\t\022" +
      "\021\n\tentrytime\030\003 \002(\003\022\020\n\010exchange\030\004 \002(\t\022\016\n\006" +
      "symbol\030\005 \002(\t\022\014\n\004side\030\006 \002(\005\022\r\n\005price\030\007 \002(" +
      "\001\022\020\n\010quantity\030\010 \002(\003\"-\n\rDataTradeList\022\034\n\005" +
      "trade\030\001 \003(\0132\r.BE.DataTrade"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
      new com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner() {
        public com.google.protobuf.ExtensionRegistry assignDescriptors(
            com.google.protobuf.Descriptors.FileDescriptor root) {
          descriptor = root;
          internal_static_BE_DataTrade_descriptor =
            getDescriptor().getMessageTypes().get(0);
          internal_static_BE_DataTrade_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_BE_DataTrade_descriptor,
              new java.lang.String[] { "OrderId", "TradeId", "Entrytime", "Exchange", "Symbol", "Side", "Price", "Quantity", },
              BE.BETradeList.DataTrade.class,
              BE.BETradeList.DataTrade.Builder.class);
          internal_static_BE_DataTradeList_descriptor =
            getDescriptor().getMessageTypes().get(1);
          internal_static_BE_DataTradeList_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_BE_DataTradeList_descriptor,
              new java.lang.String[] { "Trade", },
              BE.BETradeList.DataTradeList.class,
              BE.BETradeList.DataTradeList.Builder.class);
          return null;
        }
      };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        }, assigner);
  }
  
  // @@protoc_insertion_point(outer_class_scope)
}
